name: "CI"
on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1

jobs:

  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.4.0
    - uses: cachix/install-nix-action@v15
    - run: nix-shell --command "cd rep_lang_concrete_syntax && CARGO_TARGET_DIR=../target cargo test --verbose"
    - run: nix-shell --command "cd rep_lang_core && CARGO_TARGET_DIR=../target cargo test --verbose"
    - run: nix-shell --command "cd rep_lang_runtime && CARGO_TARGET_DIR=../target cargo test --verbose"

#   test:
#     name: test with Rust ${{ matrix.rust }} on ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         include:
#           - { rust: stable,           os: ubuntu-latest }
#           # - { rust: beta,             os: ubuntu-latest }
#           # - { rust: nightly,          os: ubuntu-latest }
#     steps:
#       - uses: actions/checkout@v2
#       - uses: hecrj/setup-rust-action@v1
#         with:
#           rust-version: ${{ matrix.rust }}
#       - run: cd rep_lang_concrete_syntax && CARGO_TARGET_DIR=../target cargo test --verbose
#       - run: cd rep_lang_core && CARGO_TARGET_DIR=../target cargo test --verbose
#       - run: cd rep_lang_runtime && CARGO_TARGET_DIR=../target cargo test --verbose
#
#   rustfmt:
#     name: cargo fmt
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: hecrj/setup-rust-action@v1
#         with:
#           components: rustfmt
#       - run: cd rep_lang_concrete_syntax && CARGO_TARGET_DIR=../target cargo fmt -- --check
#       - run: cd rep_lang_core && CARGO_TARGET_DIR=../target cargo fmt -- --check
#       - run: cd rep_lang_runtime && CARGO_TARGET_DIR=../target cargo fmt -- --check
